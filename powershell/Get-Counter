$ProcessName = "firefox"
$CpuCores = (Get-WMIObject Win32_ComputerSystem).NumberOfLogicalProcessors
$Samples = (Get-Counter “\Process($Processname*)\% Processor Time”).CounterSamples
$Samples | Select `InstanceName, @{Name=”CPU %”;Expression={[Decimal]::Round(($_.CookedValue / $CpuCores), 2)}}


$taskSnapshot =  gwmi -class win32_process | Where-Object {$_.ProcessName -eq 'firefox.exe'}
foreach ($task in $taskSnapshot){
    $task.GetOwner().User
}
$taskList = @()
foreach ($task in $taskSnapshot){
    

    $taskProps = @{
        'Handles'=$task.Handles
        'Name'=$task.Name
        'PID'=$task.Id
        'UserId' = $task.GetOwner().User
        'PercentCpu' = (Get-Counter “\Process($Processname*)\% Processor Time”).CounterSamples.CookedValue[0] / $CpuCores
    }
    $taskObject = New-Object -TypeName PSObject -Property $taskProps
    $taskList += $taskObject
}

$taskList | Out-GridView


Get-Counter -ComputerName nvm5102cdc '\Process(*)\% Processor Time' `
    | Select-Object -ExpandProperty countersamples `
    | Select-Object -Property instancename, cookedvalue `
    | Sort-Object -Property cookedvalue -Descending | Select-Object -First 20 `
    | ft InstanceName,@{L='CPU';E={($_.Cookedvalue/100/8).toString('P')}} -AutoSize
